// thêm ngoawch nhọn bao bên ngoài sẽ ko có lỗi trùng tên biến khai báo
// với file js khác khi cùng add vào html
const getNavInputSearch = $("#nav__input-search");
const getNavlinkSearch = $(".nav__link-search");
// const  elmBody = document.querySelector('body')
//  hàm tạo hiệu ứng cho header khi cuộn trang : scroll on page
const elmMainSlider = $(".main__slider");
const elmHeader = $("header");
const elmNav = $("nav");
//  hàm tạo hiệu ứng cho header khi cuộn trang : scroll on page và hiển thị nút back-to-top
function headerEffect() {
  window.onscroll = function () {
    if (window.pageYOffset >= $(".slider-header").innerHeight()) {
      elmNav.addClass("header-fixed");
      // elmMainSlider.css("marginTop", "72px");
      $(".menu-bars-container").css("top", "0");
      $(".menu-bars-container").css("height", "calc( 100vh + 32px)");
    } else {
      elmNav.removeClass("header-fixed");
      // elmMainSlider.css("marginTop", "0");
      $(".menu-bars-container").css("top", "32px");
    }
    showBackToTop();
  };
}
headerEffect();
// hàm ẩn hiện nút back-to-top
function showBackToTop() {
  if (window.pageYOffset > "450") {
    $("#btn-back-to-top").fadeIn();
  } else {
    $("#btn-back-to-top").fadeOut();
  }
}

function logIn() {
  if (localStorage.getItem("name") != null) {
    $(".nav__header-user").css("display", "none");
    $('.nav-mobile__center-item a[href="loginRegister.html"]').css(
      "display",
      "none"
    );
    $(".header__user").css("display", "block");
    $(".header-mobile__user").css("display", "flex");
    changeName(".header__user-name");
    changeName(".header-mobile__user-name");
    if (
      localStorage.getItem("url") &&
      localStorage.getItem("url") != "undefined"
    ) {
      $(".header-mobile__user-info img").attr(
        "src",
        `${localStorage.getItem("url")}`
      );
      $(".header__user-image>img").attr(
        "src",
        `${localStorage.getItem("url")}`
      );
    }
  }
}
logIn();
function changeName(classElmName) {
  $(classElmName)
    .text(localStorage.getItem("name"))
    .css("color", "#000")
    .css("text-transform", "capitalize");
  if (classElmName == ".header-mobile__user-name") {
    $(".header-mobile__user-name").css("color", "#fff");
    $(".header-mobile__user-name").parent().attr("style", "");
  }
}
function logOut(classElmLogOut) {
  $(classElmLogOut).click(function () {
    $(".nav__header-user").css("display", "block");
    $('.nav-mobile__center-item a[href="loginRegister.html"]').css(
      "display",
      "block"
    );
    $(".header__user").css("display", "none");
    $(".header-mobile__user").css("display", "none");
    localStorage.removeItem("id");
    localStorage.removeItem("name");
    localStorage.removeItem("password");
    localStorage.removeItem("url");
    localStorage.removeItem("email");
    localStorage.removeItem("date");
    localStorage.removeItem("month");
    localStorage.removeItem("genderId");
    localStorage.removeItem("phone");
    localStorage.removeItem("year");
  });
}
logOut(".header__user-logout");
logOut(".header-mobile__user-logout");

//hàm check xem ô search input đã có giá trị hay chưa
function checkValueNavInput() {
  if (!getNavInputSearch.val().trim()) {
    {
      return false;
    }
  }
  return true;
}
//hàm check xem ô search input-mobile đã có giá trị hay chưa
const getNavInputSearchMobile = $("#nav-mobile__input-search");
function checkValueNavInputMobile() {
  if (!getNavInputSearchMobile.val().trim()) {
    {
      return false;
    }
  }
  return true;
}
// hàm dừng lại hành vi mặc định của thẻ a nếu kiểm tra người dùng chưa nhập dữ liệu và chuyển sang trang search
function switchSearchPage() {
  {
    getNavlinkSearch.click(function (even) {
      even.preventDefault();
      if (!checkValueNavInput()) {
      } else {
        sessionStorage.setItem("keywordSearch", `${getNavInputSearch.val()}`);
        window.location.assign(
          `search.html?title_like=${getNavInputSearch.val()}`
        );
      }
    });
  }
}
switchSearchPage();
//mobile: hàm dừng lại hành vi mặc định của thẻ a nếu kiểm tra người dùng chưa nhập dữ liệu và chuyển sang trang search
const getNavlinkSearchMobile = $(".nav-mobile__link-search");
function switchSearchPageMobile() {
  {
    getNavlinkSearchMobile.click(function (even) {
      even.preventDefault();
      if (!checkValueNavInputMobile()) {
      } else {
        sessionStorage.setItem(
          "keywordSearch",
          `${getNavInputSearchMobile.val()}`
        );
        window.location.assign(
          `search.html?title_like=${getNavInputSearchMobile.val()}`
        );
      }
    });
  }
}
switchSearchPageMobile();

// hàm ngăn chặn hành vi mặc định khi bắt đầu click chuột vào thẻ a nhưng chưa nhả ra;
//  có tác dụng không làm mất đi focus ở thẻ input
function stopPreventDefaultMousedownNavlinkSearch() {
  getNavlinkSearch.mousedown(function (even) {
    even.preventDefault();
  });
}
stopPreventDefaultMousedownNavlinkSearch();
// hàm hiển thị sub menu mobile
function showSubMenuNav() {
  $(".nav-mobile__parent-menu i").click(function () {
    let lengthSubMenu = $(this).parent().next().children().length;
    // lengthSubMenu độ dài của submenu
    if ($(this).parent().next().css("height") == "0px") {
      if (lengthSubMenu == 5) {
        $(this).parent().next().css("height", "220px");
      } else {
        $(this).parent().next().css("height", "88px");
      }
      $(this).parent().parent().removeClass("nav-mobile__parent-menu-iconPlus");
    } else {
      $(this).parent().next().css("height", "0px");
      $(this).parent().parent().addClass("nav-mobile__parent-menu-iconPlus");
    }
  });
}
showSubMenuNav();

function showSubMenuNavUser() {
  $(".header-mobile__user-content i").click(function () {
    console.log($(this).parent().next());
    if ($(this).parent().next().css("height") == "0px") {
      $(this).parent().next().css("height", "132px");
      $(this).parent().parent().removeClass("nav-mobile__parent-menu-iconPlus");
    } else {
      $(this).parent().next().css("height", "0px");
      $(this).parent().parent().addClass("nav-mobile__parent-menu-iconPlus");
    }
  });
}
showSubMenuNavUser();

// hàm ẩn hiện menu mobile
function showMenuBars() {
  $(".menu-bars__icon-bars").click(function () {
    $(".menu-bars-container").css("right", "0px");
    $(".menu-bars__icon-bars").css("opacity", "0");
    // $('body').css('overflow','hidden')
  });
}
showMenuBars();
// ẩn menu bar
function hideMenuBars() {
  $(".menu-bars__close i").click(function (e) {
    $(".menu-bars-container").css("right", "-300px");
    // e.stopPropagation();
    // ngăn chặn sự kiện nổi bọt khi người dung click lên thẻ này;
    $(".menu-bars__icon-bars").css("opacity", "1");
    // $('body').css('overflow','auto')
  });
}
hideMenuBars();

// hàm show giở hàng và ẩn thanh tìm kiếm nếu có

function showCart() {
  $(".cart").click(function (e) {
    $(".nav__search").removeClass("showSubMenu");
    $(this).next().addClass("showSubMenu");
    $(this).next().next().addClass("showSubMenu");
    e.stopPropagation();
  });
}
showCart();
// ẩn giỏ hàng
function hideCart() {
  $(".header__quickview-cart").click(function (e) {
    e.stopPropagation();
  });
  $("body").click(function () {
    $(".header__quickview-cart").removeClass("showSubMenu");
  });
  $(".btnCloseQVCart").click(function () {
    $(this).parent().parent().removeClass("showSubMenu");
  });
}
hideCart();
// hàm hiện ra thanh tìm kiếm
function showSearch() {
  $(".nav__search-title").click(function () {
    $(this).next().toggleClass("showSubMenu");
  });
}
showSearch();

const isCheckQuantityProductOfCartHeader = function () {
  if ($(".cart__content .row").length == 0) {
    return false;
  }
  return true;
};

// hàm lấy id sản phẩm muốn render ra
function getIdProduct() {
  const queryParams = new URLSearchParams(window.location.search);
  return queryParams.get("id");
}
// hàm lấy typeProduct cua sản phẩm ;
function getTypeProduct() {
  const queryParams = new URLSearchParams(window.location.search);
  return queryParams.get("typeProduct");
}
//  hàm chuyen den danh sách sản phẩm
function switchToPageCategoryProduct() {
  const elmTypeProduct = $(".typeProduct");
  if (!elmTypeProduct) return;
  elmTypeProduct.click(function () {
    const valueTypeProduct = this.dataset.typeProduct;
    const valueIsSale = this.dataset.isSale;
    window.location.assign(
      `categoryProduct.html?typeProduct=${valueTypeProduct}&isSale=${valueIsSale}`
    );
  });
}
switchToPageCategoryProduct();

// hàm tạo cho người dùng chưa đăng kí 1 Id random không trùng với id có sẵn

function createId() {
  const id = Math.floor(100000 * Math.random());
  if (!localStorage.getItem("id")) {
    localStorage.setItem("id", `${id}`);
  }
}
createId();

// ==============================================cart==================================================
// hàm lấy data giỏ hàng trong localstore
function getCartProductLocalStore() {
  return localStorage.getItem("cart_product");
}
// hàm  tạo và update  sản phẩm trong giỏ hàng
function cartHeader() {
  function createCartProduct(product) {
    const productElm = $(
      "template#product_item"
    )[0].content.firstElementChild.cloneNode(true);
    if (!productElm) {
      return;
    }
    productElm.dataset.id_user = product.id_user;
    productElm.dataset.id_product = product.id_product;
    productElm.dataset.id = product.id;
    const imgProduct = productElm.querySelector("img");
    if (!imgProduct) return;
    imgProduct.src = product.image_product;
    const nameProduct = productElm.querySelector(".product__name");
    if (!nameProduct) return;

    nameProduct.textContent = product.name_product;
    const priceProduct = productElm.querySelector(".product__price");
    if (!priceProduct) return;
    priceProduct.textContent = product.price_product;
    const quantityProduct = productElm.querySelector(
      ".product__quantity-number-header"
    );
    if (!quantityProduct) return;
    quantityProduct.textContent = product.quantity_product;
    const sizeProduct = productElm.querySelector(".product__size-number");
    if (!sizeProduct) return;
    sizeProduct.textContent = product.size_product;

    return productElm;
  }
  // hàm render ra danh sách sản phẩm trong gio hang  trên header
  function renderCartProductItem(productListClass) {
    const productList = document.querySelectorAll(productListClass);
    if (productList.length == 0) {
      return;
    }
    productList[0].textContent = "";
    productList[1].textContent = "";
    const arrayProductCart = JSON.parse(getCartProductLocalStore());
    if (!Array.isArray(arrayProductCart) || arrayProductCart.length === 0)
      return;

    for (let product of arrayProductCart) {
      const productItem = createCartProduct(product);
      productList[0].appendChild(productItem);
      const productItem1 = createCartProduct(product);
      productList[1].appendChild(productItem1);
    }
  }
  renderCartProductItem(".cart_header_list");
  // hàm gọi api lấy dự liêu trên sever tính tổng giá tiền các sản phẩm trong giỏ hàng
  function sumMoneyApi(classTotalMoney) {
    const id_user = localStorage.getItem("id");
    if (!id_user) return;
    fetch(`https://api-json-sever.herokuapp.com/api/cart?id_user=${id_user}`)
      .then((response) => response.json())
      .then((arrayProductCart) => {
        let totalMoney = arrayProductCart.reduce(function (
          valueMonkey,
          product
        ) {
          const valuePriceNumber = +product.price_product
            .slice(0, product.price_product.length - 1)
            .replaceAll(",", "");
          const valueQuantityNumber = +product.quantity_product;
          return valueMonkey + valuePriceNumber * valueQuantityNumber;
        },
        0);
        stringToNumberMoney(totalMoney);
        $(classTotalMoney).html(
          `Tạm Tính : <span> ${stringToNumberMoney(totalMoney)}</span>`
        );
      });
  }
  sumMoneyApi(".total-money");
  // hàm chuyển giá tiền từ dạng số dang dạng chuỗi có đấu phảy;
  function stringToNumberMoney(numberMoney) {
    const stringMoneyStart = numberMoney.toString();
    let count = 0;
    let term = "";
    let stringMoneyEnd = "";
    for (let i = stringMoneyStart.length - 1; i >= 0; i--) {
      count++;
      if (count == 4) {
        count = 0;
        term += ",";
        i++;
      } else {
        term += stringMoneyStart[i];
      }
    }
    for (let i = term.length - 1; i >= 0; i--) {
      stringMoneyEnd += term[i];
    }
    return stringMoneyEnd + "₫";
  }
  // hàm remove class nếu giỏ hàng trống
  function removeClassCart() {
    const arrayProductCart = JSON.parse(getCartProductLocalStore());
    if (arrayProductCart.length == 0) {
      $(".cart-have-product").css("display", "none");
      $(".cart-empty").css("display", "block");
    } else {
      $(".cart-have-product").css("display", "block");
      $(".cart-empty").css("display", "none");
    }
  }
  removeClassCart();
  // hàm update tổng số sản phẩm trông giở hàng

  function updateQuantityProductOfCart() {
    let totalQuantityProduct = JSON.parse(
      localStorage.getItem("cart_product")
    ).length;
    $(".cart__number-product").text(`${totalQuantityProduct}`);
    $(".quantityProductOfCart").text(`${totalQuantityProduct}`);
  }

  updateQuantityProductOfCart();
}
cartHeader();
